/*
 * Project generated by Templater
 * Argore 2024
 */

#include <Windows.h>

#include "Reflection/Reflection.h"
#include "CommandConsole/cCommandConsole.h"

static bool run = true;
static void program_exit() 
{ 
	run = false; 
} REFLECT_STATIC_NAME( program_exit, "exit" )

int main()
{
	cCommandConsole command_console;
	HANDLE console_handle = GetStdHandle( STD_OUTPUT_HANDLE );

	SetConsoleTextAttribute( console_handle, 7 );
	printf( "C++ Reflection System\nType \"help\" for a list of all reflected functions\n" );

	while ( run )
	{
		SetConsoleTextAttribute( console_handle, 8 );
		printf( "\n> " );
		sCommand command = command_console.pollNextCommand();
		SetConsoleTextAttribute( console_handle, 7 );

		cReflectionRegistry::callFunction( command.command, command.arguments );
	}

	SetConsoleTextAttribute( console_handle, 7 );
	return 0;
}
